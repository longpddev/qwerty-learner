[{"name":"path.basename()","trans":["The path.basename () method returns the last part of the parameter path, similar to the Unix basename command."]},{"name":"path.delimiter","trans":["Provide platform-specific path delimiters: '; for Windows',': for POSIX ' "]},{"name":"path.dirname()","trans":["The path.dirname () method returns the path's directory name, similar to the Unix dirname command. Trailing directory separators are ignored"]},{"name":"path.extname()","trans":["The path.extname () method returns the extension of the path, that is, the last occurrence in the last part of the path. (period) characters until the end of the string. If it's not in the last part of the path. , or if the base name of path (see path.basename ()) has no other than the first character. , then an empty string is returned."]},{"name":"path.format()","trans":["The path.format () method returns a path string from an object. The opposite of path.parse ()."]},{"name":"path.isAbsolute()","trans":["The path.isAbsolute () method checks whether a path is absolute."]},{"name":"path.join()","trans":["The path.join () method joins all of the given path fragments together (using platform-specific separators as delimiters) and then normalizes the resulting path. Zero-length path fragments are ignored. If the concatenated path string is a zero-length string, '.' is returned , indicating the current working directory.  "]},{"name":"path.normalize()","trans":["path.normalize () method normalizes a given path, parsing '..' and '.' snippet.  "]},{"name":"path.parse()","trans":["The path.parse () method returns an object with properties representing valid elements of path. Trailing directory separators are ignored."]},{"name":"path.posix","trans":["The path.posix property provides access to a POSIX-specific implementation of the path method."]},{"name":"path.relative()","trans":["The path.relative () method returns the relative path from to to based on the current working directory. If from and to each resolve to the same path (after calling path.resolve () respectively), a zero-length string is returned."]},{"name":"path.resolve()","trans":["The path.resolve () method will resolve a path or sequence of path fragments into an absolute path.    "]},{"name":"path.sep","trans":["Provide platform-specific path fragment separators:/\\ on Windows;/on POSIX.  "]},{"name":"path.toNamespacedPath()","trans":["On Windows systems only, the equivalent namespace-prefixed path for the given path is returned. If path is not a string, path will be returned without modification. "]},{"name":"path.win32","trans":["The path.win32 property provides access to Windows-specific implementations of path methods."]}]